Wert einer Variable aus Textfeld zuweisen:
Variable = Typ.getTyp(Textfeld.getText()); --> a = Integer.getInt(jTextField1.getText());
Wurzel aus:
wurzel = Math.sqrt(x);
zahl.setMaximumFractionDigits(n);    //Runden auf n-te nachkommastelle
Wert in Textfeld ausgeben:
Textfeld.schreibeText(((Objekt)Datentyp).Umwandlungsmethode());
try-catch Anweisung
try{
a = irgendwas;
}
catch (Exception e)
{
 irgendwas;
}
Fehlermeldung anzeigen:
javax.swing.JOptionPane.showMessageDialog(null,"");
System.err.println(""); //Konsole

jTextField1.selectAll();

jTextField1.requestFocus();

Zufallszahl generieren:
import java.util.Random;
Random zufallsgenerator = new Random();
int zufallszahl = zufallsgenerator.nextInt();

Array von Typ String deklarieren:
String[] data = {"0","1","2","3"};

tabellen:

import javax.swing.table.*;

DefaultTableModel dtm = new DefaultTableModel() {		//Modell der Tabelle
  public boolean isCellEditable(int row, int column) {
  return false;		// man kann den Zellinhalt nicht von außen verändern
}

dtm.setRowCount(0);			// Anzahl der Zeilen des Modells (0 -->1 Zeile)
dtm.setColumnCount(4);			// Anzahl der Spalten des Modells (von 0-4-->5)
table.setModel(dtm);			// Der Tabelle wird das Modell zugewiesen.
pane.add(table);			// Dem Pane wird die Tabelle
pane.setViewportView(table);		// zugewiesen
TableColumnModel tcm = table.getColumnModel();	//Modell einer Spalte
dtm.addRow(data);			// neue Zeile hinzufügen mit den inhalt von data
TableColumn tc = new TableColumn();	// Es wird eine neue Tabellenspalte erzeugt.
dtm.addColumn(tc);    			// Die Tabellesnpalte hinzufügen

// Die Zellen der neuen (letzten) Spalte werden mit Werten belegt.
    int zeile = 0;
    int spalte = dtm.getColumnCount() - 1;
    dtm.setValueAt("X",zeile,spalte);
    zeile++;
    dtm.setValueAt("Y",zeile,spalte);

DefaultTableCellRenderer dtcr = new DefaultTableCellRenderer() {	//Anwender, der
   public void setValue(Object value) {					//Farbe, Text und
      setBackground(new Color(255,0,0));				//Ausrichtung fest-
      setText(value.toString());					//legen kann
   }
   public int getHorizontalAlignment() {
      return javax.swing.SwingConstants.CENTER;
   }
   public int getVerticalAlignment() {
      return javax.swing.SwingConstants.CENTER;
   }
}

for(int i = 0; i < tcm.getColumnCount(); i++) {		// Die Zellen der Tabelle werden
   tc = tcm.getColumn(i);				// mit Farbe und Text belegt
   tc.setCellRenderer(dtcr);
}

Lesen aus einer Datei:

import java.io.*;

BufferedReader in = new BufferedReader(new FileReader("write.txt"));
String dummy = in.readLine();
while(dumm!=null){      
memo.append(dummy);
memo.append("\n");
dummy = in.readLine();}
in.close();

Schreiben in eine Datei:
BufferedWriter b = new BufferedWriter(new FileWriter("write.txt"));
b.write("Hallo");
b.newLine();
b.write("Welt");
b.flush();
